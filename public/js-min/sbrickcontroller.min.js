var SBrickChannel=Backbone.Model.extend({idAttribute:"channelId",defaults:{channelId:null,min:-255,max:255,keyInc:null,keyDec:null},initialize:function(){},getKeyNames:function(){return{keyIncName:keycode(this.get("keyInc")),keyDecName:keycode(this.get("keyDec"))}}}),SBrickChannelCollection=Backbone.Collection.extend({model:SBrickChannel}),SBrick=Backbone.Model.extend({idAttribute:"uuid",defaults:{uuid:null,swVersion:null,hwVersion:null,secured:!1,connected:!1,password:null,streamUrl:null},initialize:function(){this.listenTo(this.channels,"change",function(){this.save()}),this.voltages=new TimeSeries,this.temperatures=new TimeSeries,this.set("connected",!1)},toJSON:function(a){var b={uuid:this.get("uuid"),password:this.get("password"),streamUrl:this.get("streamUrl"),channels:this.channels.toJSON(a)};return b},parse:function(a,b){return void 0===this.channels&&(this.channels=new SBrickChannelCollection,this.channels.add(new SBrickChannel({channelId:0})),this.channels.add(new SBrickChannel({channelId:1})),this.channels.add(new SBrickChannel({channelId:2})),this.channels.add(new SBrickChannel({channelId:3}))),a.channels&&this.channels.reset(a.channels),_.omit(a,"channels")},addVoltage:function(a,b){this.voltages.append(a,b)},addTemperature:function(a,b){this.temperatures.append(a,b)},connect:function(){this.get("connected")||this.trigger("connect",this)},disconnect:function(){this.get("connected")&&this.trigger("disconnect",this)},setConnected:function(a){this.set("connected",a),a===!1&&(this.voltages.clear(),this.temperatures.clear())},getProxiedStreamUrl:function(){return"/sbricks/"+this.get("uuid")+"/video?rnd="+Math.random()}}),SBrickCollection=Backbone.Collection.extend({model:SBrick,url:"/sbricks"}),SBrickChannelView=Backbone.View.extend({template:_.template($("#sbrick-channel-view").text()),events:{"change input[type=number]":"updateModel","keydown input[type=text]":"setKey"},initialize:function(){},render:function(){return this.setElement(this.template(_.merge(this.model.attributes,this.model.getKeyNames()))),this},setKey:function(a){a.preventDefault();var b=$(a.target).hasClass("sbrick-control-panel-channel-keyinc")?"keyInc":"keyDec";this.model.set(b,a.which),$(a.target).val(keycode(a.which)).blur()},updateModel:function(){this.model.set({min:parseInt(this.$(".sbrick-control-panel-channel-minvalue").val(),10),max:parseInt(this.$(".sbrick-control-panel-channel-maxvalue").val(),10)})},destroy:function(){this.remove()}}),SBrickView=Backbone.View.extend({template:_.template($("#sbrick-view").text()),events:{"blur .sbrick-control-panel-password":"updateModel","blur .sbrick-control-panel-stream-url":"updateModel","click .sbrick-control-panel-connect":"connect","click .sbrick-control-panel-disconnect":"disconnect"},initialize:function(){this.channelViews=[],this.timeline=null,this.listenTo(this.model,"change:connected",this.initChart),this.listenTo(this.model,"change:connected",this.setButtons),this.listenTo(this.model,"change:streamUrl",this.setStream)},render:function(){this.setElement(this.template(this.model.attributes));var a=this;return this.model.channels.forEach(function(b){var c=new SBrickChannelView({model:b});c.render().$el.appendTo(a.$(".sbrick-control-panel-channels")),a.channelViews.push(c)}),this.model.get("secured")===!1&&this.$(".sbrick-control-panel-passwords").hide(),this.setButtons(),this.setStream(),this},initChart:function(){null===this.timeline?(this.resizeCanvas(),this.timeline=new SmoothieChart({minValue:0,millisPerPixel:25}),this.timeline.addTimeSeries(this.model.voltages,{strokeStyle:"rgba(0, 255, 0, 1)",fillStyle:"rgba(0, 255, 0, 0.2)",lineWidth:1}),this.timeline.addTimeSeries(this.model.temperatures,{strokeStyle:"rgba(255, 0, 0, 1)",fillStyle:"rgba(255, 0, 0, 0.2)",lineWidth:1}),this.timeline.streamTo(this.$(".sbrick-control-panel-chart")[0])):this.model.get("connected")?this.timeline.start():this.timeline.stop()},setButtons:function(){this.model.get("connected")?(this.$(".sbrick-control-panel-connect").addClass("pure-button-disabled"),this.$(".sbrick-control-panel-disconnect").removeClass("pure-button-disabled")):(this.$(".sbrick-control-panel-connect").removeClass("pure-button-disabled"),this.$(".sbrick-control-panel-disconnect").addClass("pure-button-disabled"))},setStream:function(){this.model.get("streamUrl")?this.$(".sbrick-control-panel-stream").attr("src",this.model.getProxiedStreamUrl()).show():this.$(".sbrick-control-panel-stream").hide()},resizeCanvas:function(){this.$(".sbrick-control-panel-chart")[0].width=this.$el.width()},updateModel:function(){this.model.set("password",this.$(".sbrick-control-panel-password").val()),this.model.set("streamUrl",this.$(".sbrick-control-panel-stream-url").val()),this.model.save()},connect:function(){this.model.connect()},disconnect:function(){this.model.disconnect()},destroy:function(){this.channelViews.forEach(function(a){a.destroy()}),this.remove()}}),SBrickControllerView=Backbone.View.extend({events:{keydown:"keydown",keyup:"keyup","click #sbrick-list-scan":"scan"},initialize:function(){this.views=[],this.model=new SBrickCollection,this.listenTo(this.model,"add",this.addSBrickView),this.listenTo(this.model,"remove",this.removeSBrickView),this.listenTo(this.model,"connect",this.connect),this.listenTo(this.model,"disconnect",this.disconnect)},addSBrickView:function(a){var b=new SBrickView({model:a});b.render().$el.appendTo(this.$("#sbricks")),this.views.push(b)},removeSBrickView:function(a){this.views.reduceRight(function(b,c,d,e){c.model===a&&(c.destroy(),e.splice(d,1))},[])},keydown:function(a){var b=a.which;this.model.where({connected:!0}).forEach(function(a){a.channels.forEach(function(c){c.get("keyDec")===b&&Socket.controlChannel(a.get("uuid"),c.get("channelId"),c.get("min")),c.get("keyInc")===b&&Socket.controlChannel(a.get("uuid"),c.get("channelId"),c.get("max"))})})},keyup:function(a){var b=a.which;this.model.where({connected:!0}).forEach(function(a){a.channels.forEach(function(c){c.get("keyDec")!==b&&c.get("keyInc")!==b||Socket.controlChannel(a.get("uuid"),c.get("channelId"),0)})})},scan:function(){this.model.some({connected:!0})&&!confirm("Warning: this will disconnect everything!")||(this.$("#sbrick-list-scan").attr("disabled","disabled"),Socket.scan())},scanResponse:function(a){this.$("#sbrick-list-scan").removeAttr("disabled"),this.model.set(a,{parse:!0})},error:function(a,b){console.log("error",a,b)},connect:function(a){var b=a.get("uuid");Socket.connect(b,a.get("password"))},connected:function(a){this.model.get(a).setConnected(!0)},disconnect:function(a){var b=a.get("uuid");Socket.disconnect(b)},disconnected:function(a){this.model.get(a).setConnected(!1)},voltAndTemp:function(a,b,c){var d=(new Date).getTime();this.model.get(a).addVoltage(d,b),this.model.get(a).addTemperature(d,c)},disconnectedFromServer:function(){this.model.set([])}}),Socket={initialize:function(){this.socket=io.connect(document.location.href),this.socket.on("SBrick.scanResponse",this.scanResponse),this.socket.on("SBrick.connected",this.connected),this.socket.on("SBrick.disconnected",this.disconnected),this.socket.on("SBrick.error",this.error),this.socket.on("SBrick.voltAndTemp",this.voltAndTemp),this.socket.on("connect",this.scan.bind(this)),this.socket.on("disconnect",this.disconnectedFromServer),this.socket.on("log",this.log)},scan:function(){this.socket.emit("SBrick.scan")},scanResponse:function(a){app.scanResponse(a)},connect:function(a,b){this.socket.emit("SBrick.connect",a,b)},connected:function(a){app.connected(a)},disconnect:function(a){this.socket.emit("SBrick.disconnect",a)},disconnected:function(a){app.disconnected(a)},controlChannel:function(a,b,c){this.socket.emit("SBrick.controlChannel",a,b,c)},error:function(a,b){app.error(a,b)},voltAndTemp:function(a,b,c){app.voltAndTemp(a,b,c)},disconnectedFromServer:function(){app.disconnectedFromServer()},log:function(a,b){console.log(a,b)}},app=new SBrickControllerView({el:$("body")});Socket.initialize();